name: Test invoke.py pip
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
    types:
      - 'ready_for_review'
      - 'opened'
      - 'synchronize'
      - 'converted_to_draft'

concurrency:
   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
   cancel-in-progress: true

jobs:
  fail_if_pull_request_is_draft:
    if: github.event.pull_request.draft == true
    runs-on: ubuntu-18.04
    steps:
    - name: Fails in order to indicate that pull request needs to be marked as ready to review and unit tests workflow needs to pass.
      run: exit 1
  matrix:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        requirements-file:
          - requirements-lin-cuda.txt
          - requirements-lin-amd.txt
          - requirements-mac-mps-cpu.txt
          - requirements-win-colab-cuda.txt
        python-version:
          # - '3.9'
          - '3.10'
        include:
          - requirements-file: requirements-lin-cuda.txt
            os: ubuntu-22.04
            github-env: $GITHUB_ENV
          - requirements-file: requirements-lin-amd.txt
            os: ubuntu-22.04
            github-env: $GITHUB_ENV
          - requirements-file: requirements-mac-mps-cpu.txt
            os: macOS-12
            github-env: $GITHUB_ENV
          - requirements-file: requirements-win-colab-cuda.txt
            os: windows-2022
            github-env: $env:GITHUB_ENV
    name: ${{ matrix.requirements-file }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      HUGGING_FACE_HUB_TOKEN: '${{ secrets.HUGGINGFACE_TOKEN }}'
      INVOKE_MODEL_RECONFIGURE: '--yes'
      INVOKEAI_ROOT: '${{ github.workspace }}/invokeai'
    steps:
      - name: Checkout sources
        id: checkout-sources
        uses: actions/checkout@v3

      - name: set test prompt to main branch validation
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "TEST_PROMPTS=tests/preflight_prompts.txt" >> ${{ matrix.github-env }}

      - name: set test prompt to development branch validation
        if: ${{ github.ref == 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/dev_prompts.txt" >> ${{ matrix.github-env }}

      - name: set test prompt to Pull Request validation
        if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/validate_pr_prompt.txt" >> ${{ matrix.github-env }}

      - name: create requirements.txt
        run: cp 'environments-and-requirements/${{ matrix.requirements-file }}' '${{ matrix.requirements-file }}'

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # cache: 'pip'
          # cache-dependency-path: ${{ matrix.requirements-file }}

      - name: install dependencies
        run: pip3 install --upgrade pip setuptools wheel

      - name: install requirements
        run: pip3 install -r '${{ matrix.requirements-file }}'

      # - name: InvokeAI model cache
      #   id: cache-sd-model
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: invokeai-models
      #   with:
      #     path: ${{ env.INVOKEAI_ROOT }}/models
      #     key: ${{ env.cache-name }}

      - name: run configure_invokeai.py
        id: run-preload-models
        run: python3 scripts/configure_invokeai.py --yes

      - name: cat invokeai.init
        id: cat-invokeai
        run: cat ${{ env.INVOKEAI_ROOT }}/invokeai.init

      - name: Run the tests
        id: run-tests
        if: matrix.os != 'windows-2022'
        run: python3 scripts/invoke.py --no-patchmatch --no-nsfw_checker --from_file ${{ env.TEST_PROMPTS }}

      - name: Archive results
        id: archive-results
        if: matrix.os != 'windows-2022'
        uses: actions/upload-artifact@v3
        with:
          name: results_${{ matrix.requirements-file }}_${{ matrix.python-version }}
          path: ${{ env.INVOKEAI_ROOT }}/outputs
