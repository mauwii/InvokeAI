name: Test invoke.py pip
on:
  push:
    branches:
      - 'main'
      - 'debug/dev/pyproject-toml'
  pull_request:
    types:
      - 'ready_for_review'
      - 'opened'
      - 'synchronize'

concurrency:
   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
   cancel-in-progress: true

jobs:
  matrix:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        stable-diffusion-model:
          - stable-diffusion-1.5
        python-version:
          # - '3.9'
          - '3.10'
        pytorch:
          - linux-cuda-11_7
          - linux-rocm-5_2
          - linux-cpu
          - macos-default
          - windows-cpu
          - windows-cuda-11_7
        include:
          - pytorch: linux-cuda-11_7
            os: ubuntu-22.04
            github-env: $GITHUB_ENV
          - pytorch: linux-rocm-5_2
            os: ubuntu-22.04
            extra-index-url: 'https://download.pytorch.org/whl/rocm5.2'
            github-env: $GITHUB_ENV
          - pytorch: linux-cpu
            os: ubuntu-22.04
            extra-index-url: 'https://download.pytorch.org/whl/cpu'
            github-env: $GITHUB_ENV
          - pytorch: macos-default
            os: macOS-12
            github-env: $GITHUB_ENV
          - pytorch: windows-cpu
            os: windows-2022
            github-env: $env:GITHUB_ENV
          - pytorch: windows-cuda-11_7
            os: windows-2022
            extra-index-url: 'https://download.pytorch.org/whl/cu117'
            github-env: $env:GITHUB_ENV
      fail-fast: false
    name: ${{ matrix.pytorch }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      INVOKEAI_ROOT: ${{ github.workspace }}
      INVOKE_MODEL_RECONFIGURE: '--yes'
      PYTHONUNBUFFERED: 1
    steps:
      - name: Checkout sources
        id: checkout-sources
        uses: actions/checkout@v3

      - name: set INVOKEAI_ROOT Windows
        if: runner.os == 'Windows'
        run: |
          Get-PSDrive
          mkdir C:\InvokeAI
          echo "INVOKEAI_ROOT=C:\InvokeAI" >> ${{ matrix.github-env }}

      - name: Use Cached diffusers-1.5
        id: cache-sd-model
        uses: actions/cache@v3
        env:
          cache-name: huggingface-${{ matrix.stable-diffusion-model }}
        with:
          path: |
            ${{ env.INVOKEAI_ROOT }}/models/runwayml
            ${{ env.INVOKEAI_ROOT }}/models/stabilityai
            ${{ env.INVOKEAI_ROOT }}/models/CompVis
          key: ${{ env.cache-name }}

      - name: set test prompt to main branch validation
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "TEST_PROMPTS=tests/preflight_prompts.txt" >> ${{ matrix.github-env }}

      - name: set test prompt to development branch validation
        if: ${{ github.ref == 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/dev_prompts.txt" >> ${{ matrix.github-env }}

      - name: set test prompt to Pull Request validation
        if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/validate_pr_prompt.txt" >> ${{ matrix.github-env }}

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install invokeai
        run: pip3 install --use-pep517 .
        env:
          PIP_EXTRA_INDEX_URL: ${{ matrix.extra-index-url }}

      - name: run configure_invokeai
        id: run-preload-models
        env:
          HUGGING_FACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
        run: >
          configure_invokeai
          --yes
          --default_only
          --full-precision  # can't use fp16 weights without a GPU

      - name: Run the tests
        id: run-tests
        env:
          # Set offline mode to make sure configure preloaded successfully.
          HF_HUB_OFFLINE: 1
          HF_DATASETS_OFFLINE: 1
          TRANSFORMERS_OFFLINE: 1
        run: >
          invoke
          --no-patchmatch
          --no-nsfw_checker
          --model ${{ matrix.stable-diffusion-model }}
          --from_file ${{ env.TEST_PROMPTS }}
          --root="${{ env.INVOKEAI_ROOT }}"

      - name: Archive results
        id: archive-results
        uses: actions/upload-artifact@v3
        with:
          name: results_${{ matrix.pytorch }}_${{ matrix.python-version }}
          path: ${{ env.INVOKEAI_ROOT }}/outputs
