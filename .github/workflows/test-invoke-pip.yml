name: Test invoke.py pip
on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - 'ready_for_review'
      - 'opened'
      - 'synchronize'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  matrix:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version:
          # - '3.9'
          - '3.10'
        pytorch:
          # - linux-cuda-11_6
          - linux-cuda-11_7
          - linux-rocm-5_2
          - linux-cpu
          - macos-default
          # - macos-nightly
          - windows-cpu
          # - windows-cuda-11_6
          # - windows-cuda-11_7
        include:
          # - pytorch: linux-cuda-11_6
          #   os: ubuntu-22.04
          #   extra-index-url: 'https://download.pytorch.org/whl/cu116'
          #   github-env: $GITHUB_ENV
          - pytorch: linux-cuda-11_7
            os: ubuntu-22.04
            github-env: $GITHUB_ENV
          - pytorch: linux-rocm-5_2
            os: ubuntu-22.04
            extra-index-url: 'https://download.pytorch.org/whl/rocm5.2'
            github-env: $GITHUB_ENV
          - pytorch: linux-cpu
            os: ubuntu-22.04
            extra-index-url: 'https://download.pytorch.org/whl/cpu'
            github-env: $GITHUB_ENV
          - pytorch: macos-default
            os: macOS-12
            github-env: $GITHUB_ENV
          # - pytorch: macos-nightly
          #   os: macOS-12
          #   github-env: $GITHUB_ENV
          #   extra-index-url: 'https://download.pytorch.org/whl/nightly/cpu'
          #   extra-argument: '--pre'
          - pytorch: windows-cpu
            os: windows-2022
            github-env: $env:GITHUB_ENV
          # - pytorch: windows-cuda-11_6
          #   os: windows-2022
          #   extra-index-url: 'https://download.pytorch.org/whl/cu116'
          #   github-env: $env:GITHUB_ENV
          # - pytorch: windows-cuda-11_7
          #   os: windows-2022
          #   extra-index-url: 'https://download.pytorch.org/whl/cu117'
          #   github-env: $env:GITHUB_ENV
    name: ${{ matrix.pytorch }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      PIP_USE_PEP517: '1'
    steps:
      - name: Checkout sources
        id: checkout-sources
        uses: actions/checkout@v3

      - name: set test prompt to main branch validation
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "TEST_PROMPTS=tests/preflight_prompts.txt" >> ${{ matrix.github-env }}

      - name: set test prompt to Pull Request validation
        if: ${{ github.ref != 'refs/heads/main' }}
        run: echo "TEST_PROMPTS=tests/validate_pr_prompt.txt" >> ${{ matrix.github-env }}

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: install invokeai
        env:
          PIP_EXTRA_INDEX_URL: ${{ matrix.extra-index-url }}
        run: >
          pip3 install
          --use-pep517
          --editable=".[test]"

      - name: run pytest
        run: pytest

      - name: run unit-tests
        id: unit-tests
        run: pytest

      - name: set INVOKEAI_OUTDIR
        run: >
          python -c
          "import os;from ldm.invoke.globals import Globals;OUTDIR=os.path.join(Globals.root,str('outputs'));print(f'INVOKEAI_OUTDIR={OUTDIR}')"
          >> ${{ matrix.github-env }}

      - name: set huggingface-cache dir
        run: >
          python -c
          "from ldm.invoke.globals import global_models_dir;print(f'MODELS_CACHE_DIR={global_models_dir()}')"
          >> ${{ matrix.github-env }}

      - name: huggingface cache
        id: huggingface-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.MODELS_CACHE_DIR }}
          key: huggingface-models
          restore-keys: huggingface-models
          enableCrossOsArchive: true

      - name: run invokeai-configure
        id: run-preload-models
        env:
          HUGGING_FACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
        run: >
          invokeai-configure
          --yes
          --default_only

      - name: run invoke
        id: run-invoke
        env:
          # Set offline mode to make sure configure preloaded successfully.
          HF_HUB_OFFLINE: 1
          HF_DATASETS_OFFLINE: 1
          TRANSFORMERS_OFFLINE: 1
        run: >
          invokeai
          --no-patchmatch
          --no-nsfw_checker
          --from_file ${{ env.TEST_PROMPTS }}
          --outdir ${{ env.INVOKEAI_OUTDIR }}/${{ matrix.python-version }}/${{ matrix.pytorch }}

      - name: Archive results
        id: archive-results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: ${{ env.INVOKEAI_OUTDIR }}
