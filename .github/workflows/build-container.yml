# Building the Image without pushing to confirm it is still buildable
# confirum functionality would unfortunately need way more resources
name: build container image
on:
  push:
    branches:
      - 'main'
      - 'push-dockerfile'

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        registry:
          - ghcr.io
        pip-requirements:
          - requirements-lin-amd.txt
          - requirements-lin-cuda.txt
        include:
          - pip-requirements: requirements-lin-amd.txt
            flavor: amd
            platforms: linux/amd64,linux/arm64
          - pip-requirements: requirements-lin-cuda.txt
            flavor: cuda
            platforms: linux/amd64,linux/arm64
    runs-on: ubuntu-latest
    name: ${{ matrix.flavor }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.registry }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
          flavor: |
            latest=auto
            suffix=-${{ matrix.flavor }},latest=${{ matrix.flavor == cuda }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - if: github.event_name != 'pull_request'
        name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker-build/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: pip_requirements=${{ matrix.pip-requirements }}
